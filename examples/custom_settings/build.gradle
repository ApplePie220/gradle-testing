plugins {
    id "java"
    id "eclipse"
    id "idea"
    id "jaci.openrio.gradle.GradleRIO" version "latest-version"
}

frc {
    team = "5333"
    robotClass = "test.frc.TestRobot"

    deploy = false                      // Note, this disables deployment for this project
    deployTimeout = 2
    deployDirectory = "/home/lvuser/some_other_folder"
    rioIP = "10.53.33.2"
    rioHost = "my_roborio.local"

    // robotCommand overrides runArguments, jvmArguments and useDebugCommand.
    // Setting robotCommand to null will not deploy a robotCommand, useful for multiproject builds
    // Setting robotCommand to an empty string ('') will make GradleRIO autogenerate it (this is the default)
    robotCommand = "./something_else"
    runArguments = "--hello"            // Arguments to launch the Java Program with
    jvmArguments = "-Xmx90m"            // Arguments to send to the JVM
    useDebugCommand = true              // Set to true to make the program wait for a remote debugger before starting
}

wpi {
    wpilibVersion = "2017.1.1"
    ntcoreVersion = "3.1.5"
    opencvVersion = "3.1.0"
    cscoreVersion = "1.0.0"

    talonSrxVersion = "4.4.1.8"
}

dependencies {
    compile wpilib()
    compile talonSrx()
}

def robotManifest = {
  attributes 'Main-Class': 'edu.wpi.first.wpilibj.RobotBase'
  attributes 'Robot-Class': frc.robotClass
}

jar {
    from configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
    manifest robotManifest
}

task wrapper(type: Wrapper) {
    gradleVersion = '3.2.1'
}