apply plugin: 'groovy'
apply plugin: BuildGradle

apply plugin: 'maven'

configurations {
    deployerJars
}

repositories {
  maven {
    name = "Jaci"
    url = "http://dev.imjac.in/maven"
  }
  mavenCentral()
}

dependencies {
  compile gradleApi()
  compile localGroovy()

  compile 'jaci.openrio.delegate:NetworkDelegate:1.2.1'

  deployerJars 'org.apache.maven.wagon:wagon-ssh:2.2'
}

group = "jaci.openrio.gradle"
archivesBaseName = "GradleRIO"
version = "4.2.0" // Blaze It

jar {
  manifest {
    attributes "GradleRIO-Flavour": 'GRADLERIO'
  }
}

task toast(type: Jar) {
  manifest {
    attributes 'GradleRIO-Flavour': 'TOAST'
  }
  classifier "Toast"
  from sourceSets.main.output
}

artifacts {
  archives toast
}

try {
  ext.mavenProps = file "../maven.properties"
  mavenProps.withReader {
  	def prop = new Properties()
  	prop.load(it)
  	project.ext.mavenProps = new ConfigSlurper().parse prop
  }
} catch (Exception e) {
  println "Could not load Maven Properties... You are not a developer!"
}

try {
  uploadArchives {
  	repositories.mavenDeployer {
  		configuration = configurations.deployerJars
  		repository(url: mavenProps.jaci.url) {
  			authentication(userName: mavenProps.jaci.user, password: mavenProps.jaci.auth)
  		}

  		pom {
  			groupId = project.group
              version = project.version
              artifactId = project.archivesBaseName
              project {
                  name project.archivesBaseName
                  packaging 'jar'
                  description 'Build Plugin'
              }
  		}
  	}
  }
} catch (Exception e) {}

class BuildGradle implements Plugin<Project> {
  void apply(Project project) {
    project.task('release', dependsOn: 'build') << {
      //ant.copy(file:"build/libs/GradleRIO.jar",
      //  todir: "release/gradle/libs")

      ant.zip(destfile: "releases/GradleRIO-${project.version}.zip",
        basedir: "release")
    }
  }
}
